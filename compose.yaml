services:
  api:
    container_name: api
    build:
      dockerfile: docker/api/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
      - .env.sso
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, api:80
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  worker-messenger-post-processing:
    container_name: worker-messenger-post-processing
    build:
      context: .
      dockerfile: docker/messenger/Dockerfile
    restart: unless-stopped
    env_file:
      - .env

  worker-messenger-awards:
    container_name: worker-messenger-awards
    build:
      context: .
      dockerfile: docker/messenger/Dockerfile
    restart: unless-stopped
    env_file:
      - .env

  worker-messenger-mailer:
    container_name: worker-messenger-mailer
    build:
      context: .
      dockerfile: docker/messenger/Dockerfile
    restart: unless-stopped
    env_file:
      - .env

  worker-messenger-processor-complexity:
    container_name: worker-messenger-processor-complexity
    build:
      context: .
      dockerfile: docker/messenger/Dockerfile
    restart: unless-stopped
    env_file:
      - .env

  worker-scheduler-awards:
    container_name: worker-scheduler-awards
    build:
      context: .
      dockerfile: docker/messenger/Dockerfile
    restart: unless-stopped
    env_file:
      - .env

volumes:
  caddy_data:
  caddy_config:
