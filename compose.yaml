x-templates:
  python-processor-template: &python-processor-template
    env_file:
      - .env
    environment:
      - MAX_MESSAGES=10
      - MAX_DURATION=300
    working_dir: /app
    depends_on:
      - localstack

  python-processor-build-template: &python-processor-build-template
    context: ./
    dockerfile: docker/processors/python/Dockerfile

services:
  api:
    container_name: api
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    env_file:
      - .env
      - .env.sso
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
    depends_on:
      - database

  post-processing:
    container_name: post-processing
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database

  database:
    container_name: database
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-moooood}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-moooood}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - ./docker/data/db:/var/lib/postgresql/data:rw

  processors.sentiment:
    <<: *python-processor-template
    build:
      <<: *python-processor-build-template
      args:
        PROCESSOR_PATH: processors/sentiment
    volumes:
      - ./processors/sentiment/processor.py:/app/processor.py

  processors.complexity:
    <<: *python-processor-template
    build:
      <<: *python-processor-build-template
      args:
        PROCESSOR_PATH: processors/complexity
    volumes:
      - ./processors/complexity/processor.py:/app/processor.py

  processors.keywords:
    <<: *python-processor-template
    build:
      <<: *python-processor-build-template
      args:
        PROCESSOR_PATH: processors/keywords
    volumes:
      - ./processors/keywords/processor.py:/app/processor.py

  processors.summary:
    <<: *python-processor-template
    build:
      <<: *python-processor-build-template
      args:
        PROCESSOR_PATH: processors/summary
        TRANSFORMERS_CACHE: /cache/transformers
    volumes:
      - ./data/cache/transformers:/cache/transformers
      - ./processors/summary/processor.py:/app/processor.py

volumes:
  caddy_data:
  caddy_config:
